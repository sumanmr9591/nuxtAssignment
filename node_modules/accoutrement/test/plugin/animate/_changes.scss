// Change Tests
// ============
@include test-module('Animate: Changes') {


// Change [function]
// -----------------
@include describe('Change [function]') {
  @include it('Get change from map setting') {
    @include assert-equal(
      change('modal-in'),
      (
        (transform time('fast')) ease('_out-back'),
        (opacity time('fade') ease('_out-quad')) time('delay'),
      )
    );
  }

  @include it('Applies on-the-fly adjustments') {
    @include assert-equal(
      change('slide', ('str-replace': 'transform' '-ms-transform')),
      -ms-transform time('fast')
    );
  }

  @include it('Get change from local source') {
    $local: ('new': opacity 34ms);
    @include assert-equal(
      change('new', $source: $local),
      opacity 34ms
    );
  }
}


// Add Changes [mixin]
// -------------------
@include describe('Add Changes [mixin]') {
  $old: $changes;
  $a: ('glow': glow time('slow') ease('_in') infinite alternate);
  $b: ('slide-out': '#slide' ease('_in'));

  @include add-changes($a, $b);

  @include it('Merges changes, and updates global variable') {
    @include assert-equal(
      $changes,
      map-merge($old, map-merge($a, $b))
    );
  }

  $changes: $old !global;
}


// Animate [mixin]
// ---------------
@include describe('Animate [mixin]') {
  @include it('Outputs a named animation to CSS') {
    @include assert {
      @include output {
        @include animate('animation');
      }
      @include expect {
        animation: slide-frames 1 time('fast') ease('_out-back');
      }
    }
  }

  @include it('Handles recursive animations') {
    @include assert {
      @include output {
        @include animate('animation-ref');
      }
      @include expect {
        animation: slide-frames 1 time('fast') ease('_out-back') both;
      }
    }
  }

  @include it('Handles multiple animations') {
    @include assert {
      @include output {
        @include animate('animation', 'animation-ref');
      }
      @include expect {
        animation:
          slide-frames 1 time('fast') ease('_out-back'),
          slide-frames 1 time('fast') ease('_out-back') both
        ;
      }
    }
  }
}


// Transition [mixin]
// ------------------
@include describe('Transition [mixin]') {
  @include it('Outputs a named transition to CSS') {
    @include assert {
      @include output {
        @include transition('slide');
      }
      @include expect {
        transition:  transform time('fast');
      }
    }
  }

  @include it('Handles recursive transitions') {
    @include assert {
      @include output {
        @include transition('slide-in');
      }
      @include expect {
        transition:  transform time('fast') ease('_out-back');
      }
    }
  }

  @include it('Handles multiple transitions') {
    @include assert {
      @include output {
        @include transition('modal-in', 'fade');
      }
      @include expect {
        transition:
          transform time('fast') ease('_out-back'),
          opacity time('fade') ease('_out-quad') time('delay'),
          opacity time('fade') ease('_out-quad')
        ;
      }
    }
  }
}

} // end module
