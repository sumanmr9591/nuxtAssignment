 // Easing Tests
// ============
@include test-module('Animate: Easing') {


// Ease [function]
// ---------------
@include describe('Ease [function]') {
  @include it('Get easing from defaults') {
    @include assert-equal(
      ease('_in-out-quad'),
      cubic-bezier(0.455, 0.03, 0.515, 0.955)
    );
  }

  @include it('Get easing from user') {
    @include assert-equal(
      ease('elastic'),
      cubic-bezier(0.5, -0.4, 0.5, 1.4)
    );
  }

  @include it('Get easing from recursion') {
    @include assert-equal(
      ease('sidebar-in'),
      cubic-bezier(0.455, 0.03, 0.515, 0.955)
    );
  }

  @include it('Applies on-the-fly adjustments') {
    @include assert-equal(
      ease('sidebar-in', ('str-replace': 0.03 0.25)),
      cubic-bezier(0.455, 0.25, 0.515, 0.955)
    );
  }

  @include it('Get easing from local map') {
    $local: ('name': 'ease-in-out');
    @include assert-equal(
      ease('name', $source: $local),
      ease-in-out
    );
  }

}


// Add Ease [mixin]
// ----------------
@include describe('Add Ease [mixin]') {
  $old: $easing;
  $a: ('sidebar-in': '_in-out-quad');
  $b: ('elastic': '_in-out-back');

  @include add-easing($a, $b);

  @include it('Merges times, and updates global variable') {
    @include assert-equal(
      $easing,
      map-merge($old, map-merge($a, $b))
    );
  }

  $easing: $old !global;
}

} // end module
