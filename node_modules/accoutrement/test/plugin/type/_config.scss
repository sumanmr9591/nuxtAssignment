// Configuration Tests
// ===================
@include test-module('Type: Config') {


@include describe('Add Font [mixin]') {
  $partial: (
    'name': 'FranklinGothic',
    'stack': ('Helvetica', 'Arial', 'sans-serif'),
  );

  $franklin: (
    'name': 'FranklinGothic',
    'stack': ('Helvetica', 'Arial', 'sans-serif'),
    'normal': 'franklingothic-regular-filename',
    'bold': 'franklingothic-bold-filename',
    'formats': 'woff2' 'woff',
  );

  @include it('Adds a font to the global variable') {
    @include assert-false(
      map-get($fonts, 'sans')
    );

    @include add-font('sans', $partial);

    @include assert-equal(
      map-get($fonts, 'sans'),
      $partial
    );
  }

  @include it('Allows you to override with a force argument') {
    @include assert-unequal(
      map-get($fonts, 'sans'),
      $franklin
    );

    @include add-font('sans', $franklin, 'force');

    @include assert-equal(
      map-get($fonts, 'sans'),
      $franklin
    );
  }

  @include it('Errors on existing font-key') {
    $has: map-get($fonts, 'sans');
    @include assert-true($has);

    @include assert {
      @include output {
        @include add-font('sans', 'any');
      }

      @include expect {
        --accoutrement-error: 'ERROR [add-font] Font key `sans` already exists. Rename or `$force` to continue';
      }
    }

    @include assert-equal(
      map-get($fonts, 'sans'),
      $has
    );
  }
}

} // end module
